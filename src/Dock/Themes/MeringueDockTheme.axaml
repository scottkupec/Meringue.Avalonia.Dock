<Styles
  xmlns="https://github.com/avaloniaui"
  xmlns:converters="clr-namespace:Meringue.Avalonia.Dock.Converters"
  xmlns:controls="using:Meringue.Avalonia.Dock.Controls"
  xmlns:helpers="clr-namespace:Meringue.Avalonia.Dock.Helpers"
  xmlns:init="clr-namespace:Meringue.Avalonia.Dock"
  xmlns:layout="clr-namespace:Meringue.Avalonia.Dock.Layout"
  xmlns:sys="clr-namespace:System;assembly=mscorlib"
  xmlns:viewModels="using:Meringue.Avalonia.Dock.ViewModels"
  xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
  x:Class="Meringue.Avalonia.Dock.Themes.MeringueDockTheme">

  <Styles.Resources>
    <ResourceDictionary>
      <converters:DockToOrientationConverter x:Key="DockToOrientationConverter"/>
      <converters:PinIconConverter x:Key="PinIconConverter" />
      <converters:InverseBooleanConverter x:Key="InverseBooleanConverter"/>
    </ResourceDictionary>
  </Styles.Resources>

  <Style Selector=":is(controls|DockSplitPanel)">
    <Setter Property="HorizontalAlignment" Value="Stretch" />
    <Setter Property="VerticalAlignment" Value="Stretch" />
    <Setter Property="Template">
      <ControlTemplate>
        <Grid x:Name="PART_Container" />
      </ControlTemplate>
    </Setter>
  </Style>

  <Style Selector=":is(controls|DockTabPanel)">
    <Setter Property="TabStripPlacement" Value="Bottom" />

    <Setter Property="Template">
      <ControlTemplate>
        <Grid>
          <Border Name="PART_DropTarget"
                  Background="Transparent"
                  IsHitTestVisible="True"
                  ZIndex="0" />
          <DockPanel ZIndex="1">
            <ItemsPresenter
              Name="PART_ItemsPresenter"
              DockPanel.Dock="{TemplateBinding TabStripPlacement}"
              ItemsPanel="{TemplateBinding ItemsPanel}"
              IsVisible="{TemplateBinding ShouldShowTabStrip}" />

            <ContentPresenter
              Name="PART_SelectedContentHost"
              Content="{TemplateBinding SelectedContent}"
              ContentTemplate="{TemplateBinding SelectedContentTemplate}" />
          </DockPanel>
        </Grid>
      </ControlTemplate>
    </Setter>

    <Setter Property="ItemTemplate">
      <DataTemplate DataType="viewModels:DockToolViewModel">
        <TextBlock FontSize="12" Text="{Binding Header}" />
      </DataTemplate>
    </Setter>

    <Setter Property="ContentTemplate">
      <DataTemplate DataType="viewModels:DockToolViewModel">
        <controls:DockTool Header="{Binding Header}">
          <ContentPresenter Content="{Binding Context}" />
        </controls:DockTool>
      </DataTemplate>
    </Setter>

    <Style Selector="^[TabStripPlacement=Left] /template/ ItemsPresenter#PART_ItemsPresenter > WrapPanel">
      <Setter Property="Orientation" Value="Vertical" />
    </Style>
    <Style Selector="^[TabStripPlacement=Right] /template/ ItemsPresenter#PART_ItemsPresenter > WrapPanel">
      <Setter Property="Orientation" Value="Vertical" />
    </Style>
    <Style Selector="^[TabStripPlacement=Top] /template/ ItemsPresenter#PART_ItemsPresenter > WrapPanel">
      <Setter Property="Orientation" Value="Horizontal" />
      <Setter Property="Margin" Value="0,4,0,0" />
    </Style>
    <Style Selector="^[TabStripPlacement=Bottom] /template/ ItemsPresenter#PART_ItemsPresenter > WrapPanel">
      <Setter Property="Orientation" Value="Horizontal" />
      <Setter Property="Margin" Value="0,0,0,4" />
    </Style>
  </Style>

  <Style Selector=":is(controls|DockTool)">
    <Setter Property="Template">
      <ControlTemplate x:DataType="viewModels:DockToolViewModel">
        <Grid>
          <Border IsVisible="{Binding IsVisible}"
                  Margin="5"
                  BorderThickness="1"
                  BorderBrush="Gray"
                  CornerRadius="4">
            <DockPanel>

              <Border x:Name="PART_TitleBar"
                      DockPanel.Dock="Top"
                      Background="SlateGray"
                      Padding="1"
                      Cursor="SizeAll">
                <controls:TabHeaderView
                    HorizontalAlignment="Stretch"
                    VerticalAlignment="Top" />
              </Border>

              <ContentPresenter Content="{Binding Context}" />
            </DockPanel>
          </Border>

          <Border IsVisible="{Binding IsVisible, Converter={StaticResource InverseBooleanConverter}}"
                  Background="SlateGray"
                  Height="30"
                  VerticalAlignment="Top"
                  Margin="5"
                  CornerRadius="4">
            <TextBlock Text="{Binding Header}"
                       Foreground="White"
                       VerticalAlignment="Center"
                       HorizontalAlignment="Center"
                       Padding="8,4" />
          </Border>
        </Grid>
      </ControlTemplate>
    </Setter>
  </Style>

  <Style Selector=":is(controls|DockToolStub)">
    <Setter Property="Template">
      <ControlTemplate TargetType="controls:DockToolStub">
        <Border Background="Transparent">
          <ScrollViewer VerticalScrollBarVisibility="Auto">
            <ItemsControl ItemsSource="{TemplateBinding Tabs}">
              <ItemsControl.ItemsPanel>
                <ItemsPanelTemplate>
                  <StackPanel Orientation="Vertical" Width="40" />
                </ItemsPanelTemplate>
              </ItemsControl.ItemsPanel>

              <ItemsControl.ItemTemplate>
                <DataTemplate DataType="viewModels:DockToolViewModel">
                  <LayoutTransformControl>
                    <LayoutTransformControl.LayoutTransform>
                      <RotateTransform Angle="-90" />
                    </LayoutTransformControl.LayoutTransform>

                    <ToggleButton IsChecked="{Binding IsPinned, Mode=TwoWay}"
                                  FontSize="12"
                                  Background="SlateGray"
                                  helpers:FlyoutHelper.ShowFlyoutOnHover="True">

                      <FlyoutBase.AttachedFlyout>
                        <Flyout Placement="Right"
                                ShowMode="TransientWithDismissOnPointerMoveAway"
                                OverlayDismissEventPassThrough="True">
                          <ContentControl Content="{Binding Context}">
                            <ContentControl.ContentTemplate>
                              <DataTemplate>
                                <ContentPresenter Content="{Binding}" />
                              </DataTemplate>
                            </ContentControl.ContentTemplate>
                          </ContentControl>
                        </Flyout>
                      </FlyoutBase.AttachedFlyout>

                      <StackPanel Orientation="Horizontal"
                                  Spacing="2"
                                  HorizontalAlignment="Center">
                        <TextBlock Text="{Binding IsPinned, Converter={StaticResource PinIconConverter}}" />
                        <TextBlock Text="{Binding Header}" />
                      </StackPanel>
                    </ToggleButton>
                  </LayoutTransformControl>
                </DataTemplate>
              </ItemsControl.ItemTemplate>
            </ItemsControl>
          </ScrollViewer>
        </Border>
      </ControlTemplate>
    </Setter>
  </Style>

  <Style Selector=":is(controls|DockHostRoot)">
    <Setter Property="Template">
      <ControlTemplate TargetType="controls:DockHostRoot">
        <Grid ColumnDefinitions="Auto,*">
          <controls:DockHost Grid.Column="1" Content="{TemplateBinding RootNode}" />
          <controls:DockToolStub x:Name="PART_UnpinnedStub"
                                  DockEdge="Left"
                                  Grid.Column="0"
                                  VerticalAlignment="Stretch"
                                  HorizontalAlignment="Left"
                                  Margin="0"
                                  IsVisible="{TemplateBinding ShouldShowUnpinnedTabs}" />
        </Grid>
      </ControlTemplate>
    </Setter>
  </Style>

  <Style Selector=":is(layout|DockLayoutRoot)" x:DataType="viewModels:DockLayoutRootViewModel">
    <Setter Property="layout:DockLayoutRoot.HostRoot" Value="{Binding HostRoot}" />
    <Setter Property="layout:DockLayoutRoot.LayoutManager" Value="{Binding LayoutManager}" />
    <Setter Property="layout:DockLayoutRoot.InsertPolicy" Value="{Binding InsertPolicy}" />
    <Setter Property="Template">
      <ControlTemplate x:DataType="viewModels:DockLayoutRootViewModel">
        <controls:DockHostRoot
          x:DataType="viewModels:DockHostRootViewModel"
          RootNode="{TemplateBinding HostRoot}"
          DataContext="{Binding HostRoot}"
          UnpinnedTabs="{Binding UnpinnedTabs}"
          ShouldShowUnpinnedTabs="{Binding ShouldShowUnpinnedTabs}" />
      </ControlTemplate>
    </Setter>
  </Style>
</Styles>
